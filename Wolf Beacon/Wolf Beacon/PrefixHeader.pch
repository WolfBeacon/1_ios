//
//  PrefixHeader.pch
//  Wolf Beacon
//
//  Created by Avikant Saini on 11/11/16.
//  Copyright © 2016 Wolf Beacon. All rights reserved.
//

#ifndef PrefixHeader_pch
#define PrefixHeader_pch

// Include any system framework and library headers here that should be included in all compilation units.
// You will also need to set the Prefix Header build setting of one or more of your targets to reference this file.

#define SKIP_FIELD_CHECKS 1

#import <SVProgressHUD/SVProgressHUD.h>
#import <AFNetworking/AFNetworking.h>
#import <KWTransition/KWTransition.h>
#import <SDWebImage/UIImageView+WebCache.h>

#import "AppDelegate.h"

#import "BBViewController.h"
#import "BBTableViewController.h"

#import "ColorsHeader.h"
#import "RequestsManager.h"
#import "CoreDataHelper.h"

#define globalFont18		 [UIFont systemFontOfSize:18 weight: UIFontWeightBold]
#define globalFont20Light	 [UIFont systemFontOfSize:20 weight: UIFontWeightLight]
#define globalFont20Thin	 [UIFont systemFontOfSize:20 weight: UIFontWeightThin]
#define globalFont16		 [UIFont systemFontOfSize:16 weight: UIFontWeightRegular]
#define globalFont16B		 [UIFont systemFontOfSize:16 weight: UIFontWeightBold]
#define globalFont16Light	 [UIFont systemFontOfSize:16 weight: UIFontWeightLight]
#define globalFont14		 [UIFont systemFontOfSize:14 weight: UIFontWeightRegular]
#define globalFont14Light	 [UIFont systemFontOfSize:14 weight: UIFontWeightLight]
#define globalFont12		 [UIFont systemFontOfSize:12 weight: UIFontWeightRegular]
#define globalFont12B		 [UIFont systemFontOfSize:12 weight: UIFontWeightBold]
#define globalFont10		 [UIFont systemFontOfSize:10 weight: UIFontWeightRegular]

#define SWidth [UIScreen mainScreen].bounds.size.width
#define SHeight [UIScreen mainScreen].bounds.size.height

#define NSLog(fmt, ...) printf("\n"); NSLog((@"\n%s ••• \n\t\t" fmt), __PRETTY_FUNCTION__, ##__VA_ARGS__);

#define SVHUD_SHOW dispatch_async(dispatch_get_main_queue(),^{[SVProgressHUD showWithStatus:@"Loading..."];});
#define SVHUD_HIDE dispatch_async(dispatch_get_main_queue(),^{[SVProgressHUD dismiss];});

#define SVHUD_FAILURE(message) dispatch_async(dispatch_get_main_queue(), ^{ [SVProgressHUD showErrorWithStatus:message]; });
#define SVHUD_SUCCESS(message) dispatch_async(dispatch_get_main_queue(), ^{ [SVProgressHUD showSuccessWithStatus:message]; })

#define SCREEN_WIDTH [UIScreen mainScreen].bounds.size.width
#define SCREEN_HEIGHT [UIScreen mainScreen].bounds.size.height

#define SHOW_ALERT(msg) dispatch_async(dispatch_get_main_queue(), ^{ \
UIAlertController *alertController = [UIAlertController alertControllerWithTitle:@"Alert" message:msg preferredStyle:UIAlertControllerStyleAlert]; \
UIAlertAction *dismissAction = [UIAlertAction actionWithTitle:@"Dismiss" style:UIAlertActionStyleCancel handler:nil]; \
[alertController addAction:dismissAction]; \
[self presentViewController:alertController animated:YES completion:nil]; \
});

#define SHOW_ALERT_2(ttl, msg) dispatch_async(dispatch_get_main_queue(), ^{ \
UIAlertController *alertController = [UIAlertController alertControllerWithTitle:ttl message:msg preferredStyle:UIAlertControllerStyleAlert]; \
UIAlertAction *dismissAction = [UIAlertAction actionWithTitle:@"Dismiss" style:UIAlertActionStyleCancel handler:nil]; \
[alertController addAction:dismissAction]; \
[self presentViewController:alertController animated:YES completion:nil]; \
});

#define PRINT_ERROR_OR_RESPONSE if (error) { \
SHOW_ALERT(@"Unable to connect. Pleast try again later"); \
[SVProgressHUD dismiss];\
NSLog(@"Error: %@", error.localizedDescription); \
return; } \
NSLog(@"Response: %@, Response object: %@", response, responseObject);


#endif /* PrefixHeader_pch */
